{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keith\\\\Documents\\\\apps\\\\keith-blackmon-portfolio\\\\components\\\\MyIcon\\\\MyIcon.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { withStyles } from \"@material-ui/styles\";\nimport styles from \"./MyIconStyles\";\nimport { mainColor, secondaryColor } from \"../../styles/colors\";\nfunction MyIcon({\n  setSelectedIndex,\n  selectedIndex,\n  iconIndex,\n  icon,\n  classes\n}) {\n  const {\n    0: color,\n    1: setColor\n  } = useState(false);\n  useEffect(() => {\n    if (selectedIndex === iconIndex) {\n      setColor(true);\n    } else {\n      setColor(false);\n    }\n  }, [selectedIndex]);\n  const handleClick = () => {\n    setSelectedIndex(iconIndex);\n  };\n  return __jsx(FontAwesomeIcon, {\n    onClick: handleClick,\n    style: {\n      color: color ? `${secondaryColor}` : \"gray\"\n    },\n    className: classes.myIcon,\n    icon: icon,\n    size: \"2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  });\n}\nexport default withStyles(styles)(MyIcon);","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","withStyles","styles","mainColor","secondaryColor","MyIcon","setSelectedIndex","selectedIndex","iconIndex","icon","classes","color","setColor","handleClick","myIcon"],"sources":["C:/Users/keith/Documents/apps/keith-blackmon-portfolio/components/MyIcon/MyIcon.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport styles from \"./MyIconStyles\";\r\nimport { mainColor, secondaryColor } from \"../../styles/colors\";\r\n\r\nfunction MyIcon({ setSelectedIndex, selectedIndex, iconIndex, icon, classes }) {\r\n  const [color, setColor] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (selectedIndex === iconIndex) {\r\n      setColor(true);\r\n    } else {\r\n      setColor(false);\r\n    }\r\n  }, [selectedIndex]);\r\n\r\n  const handleClick = () => {\r\n    setSelectedIndex(iconIndex);\r\n  };\r\n\r\n  return (\r\n    <FontAwesomeIcon\r\n      onClick={handleClick}\r\n      style={{ color: color ? `${secondaryColor}` : \"gray\" }}\r\n      className={classes.myIcon}\r\n      icon={icon}\r\n      size='2x'\r\n    />\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(MyIcon);\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,UAAU,QAAQ,qBAAqB;AAChD,OAAOC,MAAM,MAAM,gBAAgB;AACnC,SAASC,SAAS,EAAEC,cAAc,QAAQ,qBAAqB;AAE/D,SAASC,MAAM,CAAC;EAAEC,gBAAgB;EAAEC,aAAa;EAAEC,SAAS;EAAEC,IAAI;EAAEC;AAAQ,CAAC,EAAE;EAC7E,MAAM;IAAA,GAACC,KAAK;IAAA,GAAEC;EAAQ,IAAId,QAAQ,CAAC,KAAK,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACd,IAAIQ,aAAa,KAAKC,SAAS,EAAE;MAC/BI,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,MAAM;MACLA,QAAQ,CAAC,KAAK,CAAC;IACjB;EACF,CAAC,EAAE,CAACL,aAAa,CAAC,CAAC;EAEnB,MAAMM,WAAW,GAAG,MAAM;IACxBP,gBAAgB,CAACE,SAAS,CAAC;EAC7B,CAAC;EAED,OACE,MAAC,eAAe;IACd,OAAO,EAAEK,WAAY;IACrB,KAAK,EAAE;MAAEF,KAAK,EAAEA,KAAK,GAAI,GAAEP,cAAe,EAAC,GAAG;IAAO,CAAE;IACvD,SAAS,EAAEM,OAAO,CAACI,MAAO;IAC1B,IAAI,EAAEL,IAAK;IACX,IAAI,EAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACT;AAEN;AAEA,eAAeR,UAAU,CAACC,MAAM,CAAC,CAACG,MAAM,CAAC"},"metadata":{},"sourceType":"module"}